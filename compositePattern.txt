package compositePattern;

import java.util.ArrayList;

public interface IRoot {
    public String getInfo();
    public void add(IBranch branch);
    public void add(ILeaf leaf);
    public ArrayList getSubordinateInfo();
}

package compositePattern;

import java.util.ArrayList;

public interface IBranch {
	public String getInfo();
	public void add(IBranch branch);
	public void add(ILeaf leaf);
    public ArrayList getSubordinateInfo();
}


package compositePattern;

public interface ILeaf {
	public String getInfo();

}


package compositePattern;

import java.util.ArrayList;

public class Root implements IRoot {
    private ArrayList subordinateList = new ArrayList();
    private String name="";
    private String position="";
    private int salary =0;
    public Root(String name,String position,int salary){
    	this.name= name;
    	this.position = position;
    	this.salary = salary;
    }
	@Override
	public String getInfo() {
		// TODO Auto-generated method stub
		String info="";
		info="name:"+this.name;
		info=info+"\tposition"+this.position;
		info=info+"\tsalary"+this.salary;
		return info;
	}

	@Override
	public void add(IBranch branch) {
		// TODO Auto-generated method stub
		this.subordinateList.add(branch);
	}

	@Override
	public void add(ILeaf leaf) {
		// TODO Auto-generated method stub
		this.subordinateList.add(leaf);
	}

	@Override
	public ArrayList getSubordinateInfo() {
		// TODO Auto-generated method stub
		return this.subordinateList;
	}

}


package compositePattern;

import java.util.ArrayList;

public class Branch implements IBranch{

	private ArrayList subordinateList = new ArrayList();
    private String name="";
    private String position="";
    private int salary =0;
    public Branch(String name,String position,int salary){
    	this.name= name;
    	this.position = position;
    	this.salary = salary;
    }
	@Override
	public String getInfo() {
		// TODO Auto-generated method stub
		String info="";
		info="name:"+this.name;
		info=info+"\tposition"+this.position;
		info=info+"\tsalary"+this.salary;
		return info;
	}

	@Override
	public void add(IBranch branch) {
		// TODO Auto-generated method stub
		this.subordinateList.add(branch);
	}

	@Override
	public void add(ILeaf leaf) {
		// TODO Auto-generated method stub
		this.subordinateList.add(leaf);
	}

	@Override
	public ArrayList getSubordinateInfo() {
		// TODO Auto-generated method stub
		return this.subordinateList;
	}


}


package compositePattern;

import java.util.ArrayList;

public class Leaf implements ILeaf {
    private String name="";
    private String position="";
    private int salary =0;
    public Leaf(String name,String position,int salary){
    	this.name= name;
    	this.position = position;
    	this.salary = salary;
    }
	@Override
	public String getInfo() {
		// TODO Auto-generated method stub
		String info="";
		info="name:"+this.name;
		info=info+"\tposition"+this.position;
		info=info+"\tsalary"+this.salary;
		return info;
	}
}

package compositePattern;

public class Client {
	public static void main(String[] args) {
		IRoot ceo = new Root("name1","ceo",100000);
		IBranch developDep = new Branch("name2","cfo",10000);
		IBranch salesDep = new Branch("name3","cgo",20000);
		IBranch financeDep = new Branch("name4","cho",30000);
		IBranch firstDevGroup = new Branch("name5","cio",40000);
		IBranch secondDevGroup = new Branch("name6","cjo",50000);
		
		ILeaf a = new Leaf("a","develop",2000);
		ILeaf b = new Leaf("b","develop",2000);
		ILeaf c = new Leaf("c","develop",2000);
		ILeaf d = new Leaf("d","develop",2000);
		ILeaf e = new Leaf("e","develop",2000);
		ILeaf f = new Leaf("f","develop",2000);
		ILeaf g = new Leaf("g","develop",2000);
		ILeaf h = new Leaf("h","develop",2000);
		ILeaf i = new Leaf("i","develop",3000);
		ILeaf j = new Leaf("j","develop",4000);
		ILeaf k = new Leaf("k","develop",5000);
	}

}

